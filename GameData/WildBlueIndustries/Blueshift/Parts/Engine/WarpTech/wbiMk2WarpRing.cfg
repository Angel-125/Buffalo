PART
{
	name = wbiMk2WarpRing
	module = Part
	author = Angel-125

	MODEL
	{
		model = WildBlueIndustries/Blueshift/Parts/Engine/WarpTech/mk2WarpRing
	}

	rescaleFactor = 1

	node_stack_node1 = -3.80938, 0.9375, 0, 0.0, 1.0, 0.0, 1
	node_stack_node2 = 3.80938, 0.9375, 0, 0.0, 1.0, 0.0, 1
	node_stack_node3 = -3.80938, -0.9375, 0, 0.0, -1.0, 0.0, 1
	node_stack_node4 = 3.80938, -0.9375, 0, 0.0, -1.0, 0.0, 1
	node_attach = 0.0, 0.0, 0.75375, 0.0, 0.0, 1.0, 1

	NODE
	{
		name = dock
		transform = dockingNode
		size = 1
	}

	TechRequired:NEEDS[WildBlueIndustries/FlyingSaucers] = wbiAdvAlienEngineering
	TechRequired:NEEDS[!WildBlueIndustries/FlyingSaucers&CommunityTechTree] = unifiedFieldTheory
	TechRequired:NEEDS[!WildBlueIndustries/FlyingSaucers&!CommunityTechTree] = wbiWarpTech

	category = Engine
	subcategory = 0
	entryCost = 500000
	cost = 100000

	title = Mk2 Warp Ring
	manufacturer = <CLASSIFIED>
	description = Designed to be launched separately and left in orbit, this warp ring has a docking port that is compatible with the Mk2 Warp Core and Mk2 Gravimetric Dispacement Generator.
	attachRules = 1,1,1,1,0
	mass = 4.8
	vesselType = Probe
	dragModelType = none
	maximum_drag = 0.02
	minimum_drag = 0.02
	angularDrag = 0.2
	stackSymmetry = 1
	crashTolerance = 20
	thermalMassModifier = 8.0
	emissiveConstant = 0.95
	maxTemp = 2000
	explosionPotential = 0.1
	stackSymmetry = 1
	fuelCrossFeed = True
	breakingForce = 500000
	breakingTorque = 500000
	bulkheadProfiles = mk2

//	MODULE
//	{
//		name = ModuleDockingNode
//		referenceAttachNode = dock
//		nodeType = mk2WarpRing
//		stagingEnabled = False
//		minDistanceToReEngage = 1
//	}

	MODULE
	{
		name = ModuleCommand
		minimumCrew = 0
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.03
		}
		hasHibernation = True
	}

	MODULE
	{
		name = ModuleDataTransmitter
		antennaType = INTERNAL
		packetInterval = 1.0
		packetSize = 2
		packetResourceCost = 12.0
		requiredResource = ElectricCharge
		antennaPower = 5000
		optimumRange = 2500
		packetFloor = .1
		packetCeiling = 5
	}	

	MODULE
	{
		name = ModuleSAS
		SASServiceLevel = 2
	}

	MODULE
	{
		name = ModuleReactionWheel
		PitchTorque = 5
		YawTorque = 5
		RollTorque = 5
		torqueResponseSpeed = 5
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.045
		}
	}

	MODULE
	{
		name = WBIAnimatedTexture
//		debugMode = true

		// ID of the module so we can distinguish between several animated textures in one part.
		// This one is controlled by the warp coil.
		moduleID = WarpCoil

		textureTransformName = warpCoilPlasma
		animatedEmissiveTexture = WildBlueIndustries/Blueshift/Parts/Engine/WarpPlasma
		minFramesPerSecond = 15
		maxFramesPerSecond = 50
		fadesAtMinThrottle = true
		emissiveFadeTime = 0.5
	}

	// Warp Coils are simple part modules that don't need the full functionality of a resource converter just to generate warp capacity.
	// Instead, they specify the warp capacity pseudo-resource and the vessel resources needed to produce it.
	// Warp engines themselves will tally up a vessel's total warp capacity and resources needed to generate warp capacity, and
	// handle the resource requests itself. The result is faster game performance.
	MODULE
	{
		name = WBIWarpCoil
//		debugMode = true

		// Warp Coils can control animated textures
		// Hint: You can control multiple animated textures in the same part if they share the same moduleID.
		textureModuleID = WarpCoil

		// Warp coils can control a running effect too.
//		runningEffect =

		// Name of the waterfall effect controller
		waterfallEffectController = ringPlumeController

		// How much warp capacity can the coil produce?
		warpCapacity = 12

		// Warp coils, like engines, can efficiently move a certain amount of mass to light speed and beyond without penalties.
		// Going over this limit incurs performance penalties, but staying under this value provides benefits.
		// Smaller coils can move smaller ships efficiently, but it takes more of them to move a bigger ship at the same efficiency as
		// a bigger coil.
		// The displacement value is rated in metric tons.
		displacementImpulse = 25

		// What resources are consumed to produce the warp capacity.
		RESOURCE
		{
			name = GravityWaves
			rate = 50
			FlowMode = STAGE_PRIORITY_FLOW
		}	
	}

	MODULE
	{
		name = ModulePartVariants
		baseVariant = endcaps

		VARIANT
		{
			name = endcaps
			displayName = Endcaps
			primaryColor = #3a562a
			secondaryColor = #9e7100
			sizeGroup = GroupA
			GAMEOBJECTS
			{
				endcaps = true
			}
		}

		VARIANT
		{
			name = noEndcaps
			displayName = No Endcaps
			primaryColor = #3a562a
			secondaryColor = #9e7100
			sizeGroup = GroupB
			GAMEOBJECTS
			{
				endcaps = false
			}
		}
	}

MODULE:NEEDS[Waterfall]
{
	name = ModuleWaterfallFX
	engineID = 
	CONTROLLER
	{
		name = ringPlumeController
		linkedTo = custom
	}
	EFFECT
	{
		name = ringPlume
		parentName = mk2WarpRing
		MODEL
		{
			path = Waterfall/FX/fx-cylinder
			positionOffset = 0,0,0
			rotationOffset = 90,0,0
			scaleOffset = 3.6,30,3.6
			MATERIAL
			{
				transform = Cylinder
				shader = Waterfall/Additive Directional
				TEXTURE
				{
					textureSlotName = _MainTex
					texturePath = Waterfall/FX/fx-noise-3
					textureScale = 1,1
					textureOffset = 0,0
				}
				COLOR
				{
					colorName = _StartTint
					colorValue = 0.678431392,0.784313738,0.992156863,1
				}
				COLOR
				{
					colorName = _EndTint
					colorValue = 1,1,1,1
				}
				FLOAT
				{
					floatName = _Noise
					value = 2.25
				}
				FLOAT
				{
					floatName = _Brightness
					value = 2.5999999
				}
				FLOAT
				{
					floatName = _SpeedY
					value = 5
				}
				FLOAT
				{
					floatName = _Falloff
					value = 1.29999995
				}
				FLOAT
				{
					floatName = _Fresnel
					value = 1
				}
				FLOAT
				{
					floatName = _FresnelInvert
					value = 1.54999995
				}
			}
		}
		FLOATMODIFIER
		{
			name = plumeSpeed
			controllerName = ringPlumeController
			transformName = Cylinder
			combinationType = REPLACE
			useRandomness = False
			randomnessController = random
			randomnessScale = 1
			floatName = _SpeedY
			floatCurve
			{
				key = 0 0 0 0
				key = 0.1 3 0 0
				key = 0.5 4 0 0
				key = 1 5 0 0
			}
		}
		FLOATMODIFIER
		{
			name = plumeAlpha
			controllerName = ringPlumeController
			transformName = Cylinder
			combinationType = REPLACE
			useRandomness = False
			randomnessController = random
			randomnessScale = 1
			floatName = _Brightness
			floatCurve
			{
				key = 0 0 0 0
				key = 0.1 1.25 0 0
				key = 0.25 1.5 0 0
				key = 0.5 2.5 0 0
				key = 1 2.5 0 0
			}
		}
		FLOATMODIFIER
		{
			name = plumeFresnel
			controllerName = ringPlumeController
			transformName = Cylinder
			combinationType = REPLACE
			useRandomness = False
			randomnessController = random
			randomnessScale = 1
			floatName = _Fresnel
			floatCurve
			{
				key = 0 5 0 0
				key = 0.1 1.3 0 0
				key = 0.25 1.3 0 0
				key = 0.5 1.3 0 0
				key = 1 1.3 0 0
			}
		}
	}
}
// Waterfall end

	RESOURCE
	{
		name = ElectricCharge
		amount = 1000
		maxAmount = 1000
	}

	RESOURCE:NEEDS[WildBlueIndustries/FlyingSaucers]
	{
		name = StaticCharge
		amount = 0
		maxAmount = 75
	}
}